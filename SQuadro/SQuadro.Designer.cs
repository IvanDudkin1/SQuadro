//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SQuadro", "CountryCompany", "Country", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Country), "Company", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Company), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "ContactContactType", "Contact", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Contact), "ContactType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.ContactType), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "CompanyContact", "Company", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Company), "Contact", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Contact), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "CompanyCompanyArea", "Company", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Company), "CompanyArea", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.CompanyArea), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "AreaCompanyArea", "Area", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Area), "CompanyArea", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.CompanyArea), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "CompanyCategoryCompany", "Company", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Company), "CategoryCompany", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.CompanyCategory), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "CategoryCategoryCompany", "Category", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Category), "CategoryCompany", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.CompanyCategory), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "DocumentTypeDocument", "DocumentType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SQuadro.DocumentType), "Document", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Document), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "DocumentStatusDocument", "DocumentStatus", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SQuadro.DocumentStatus), "Document", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Document), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "RelatedObjectDocument", "RelatedObject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SQuadro.RelatedObject), "Document", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Document), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "UserOrganization", "User", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.User), "Organization", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Organization), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "OrganizationArea", "Organization", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Organization), "Area", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Area), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "OrganizationCompany", "Organization", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Organization), "Company", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Company), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "OrganizationContactType", "Organization", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Organization), "ContactType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.ContactType), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "OrganizationCategory", "Organization", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Organization), "Category", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Category), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "OrganizationTag", "Organization", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Organization), "Tag", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Tag), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "OrganizationDocumentStatus", "Organization", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Organization), "DocumentStatus", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.DocumentStatus), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "OrganizationDocumentType", "Organization", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Organization), "DocumentType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.DocumentType), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "OrganizationRelatedObject", "Organization", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Organization), "RelatedObject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.RelatedObject), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "OrganizationDocument", "Organization", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Organization), "Document", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Document), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "OrganizationEmailSenderTemplate", "Organization", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Organization), "EmailSenderTemplate", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.EmailSettings), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "OrganizationDocumentSet", "Organization", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Organization), "DocumentSet", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.DocumentSet), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "DocumentSetDocument", "DocumentSet", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.DocumentSet), "Document", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Document))]
[assembly: EdmRelationshipAttribute("SQuadro", "CreatedBy", "User", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.User), "Company", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Company), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "UpdatedBy", "User", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SQuadro.User), "Company", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Company), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "DocumentCreatedByUser", "User", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.User), "Document", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Document), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "DocumentUpdatedByUser", "User", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SQuadro.User), "Document", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Document), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "OrganizationEmailTemplates", "Organization", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Organization), "EmailTemplates", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.EmailTemplates), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "OrganizationSubject", "Organization", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Organization), "Subject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Subject), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "OrganizationUserRole", "Organization", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(SQuadro.Organization), "UserRole", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.UserRole), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "UserRoleUser", "UserRole", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SQuadro.UserRole), "User", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.User), true)]
[assembly: EdmRelationshipAttribute("SQuadro", "UserRoleCategory", "UserRole", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.UserRole), "Category", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.Category))]
[assembly: EdmRelationshipAttribute("SQuadro", "UserRoleRelatedObject", "UserRole", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.UserRole), "RelatedObject", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SQuadro.RelatedObject))]

#endregion

namespace SQuadro
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EntityContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EntityContext object using the connection string found in the 'EntityContext' section of the application configuration file.
        /// </summary>
        public EntityContext() : base("name=EntityContext", "EntityContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EntityContext object.
        /// </summary>
        public EntityContext(string connectionString) : base(connectionString, "EntityContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EntityContext object.
        /// </summary>
        public EntityContext(EntityConnection connection) : base(connection, "EntityContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactType> ContactTypes
        {
            get
            {
                if ((_ContactTypes == null))
                {
                    _ContactTypes = base.CreateObjectSet<ContactType>("ContactTypes");
                }
                return _ContactTypes;
            }
        }
        private ObjectSet<ContactType> _ContactTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Area> Areas
        {
            get
            {
                if ((_Areas == null))
                {
                    _Areas = base.CreateObjectSet<Area>("Areas");
                }
                return _Areas;
            }
        }
        private ObjectSet<Area> _Areas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyArea> CompanyAreas
        {
            get
            {
                if ((_CompanyAreas == null))
                {
                    _CompanyAreas = base.CreateObjectSet<CompanyArea>("CompanyAreas");
                }
                return _CompanyAreas;
            }
        }
        private ObjectSet<CompanyArea> _CompanyAreas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyCategory> CompanyCategories
        {
            get
            {
                if ((_CompanyCategories == null))
                {
                    _CompanyCategories = base.CreateObjectSet<CompanyCategory>("CompanyCategories");
                }
                return _CompanyCategories;
            }
        }
        private ObjectSet<CompanyCategory> _CompanyCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentType> DocumentTypes
        {
            get
            {
                if ((_DocumentTypes == null))
                {
                    _DocumentTypes = base.CreateObjectSet<DocumentType>("DocumentTypes");
                }
                return _DocumentTypes;
            }
        }
        private ObjectSet<DocumentType> _DocumentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentStatus> DocumentStatuses
        {
            get
            {
                if ((_DocumentStatuses == null))
                {
                    _DocumentStatuses = base.CreateObjectSet<DocumentStatus>("DocumentStatuses");
                }
                return _DocumentStatuses;
            }
        }
        private ObjectSet<DocumentStatus> _DocumentStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Document>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Document> _Documents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Organization> Organizations
        {
            get
            {
                if ((_Organizations == null))
                {
                    _Organizations = base.CreateObjectSet<Organization>("Organizations");
                }
                return _Organizations;
            }
        }
        private ObjectSet<Organization> _Organizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RelatedObject> RelatedObjects
        {
            get
            {
                if ((_RelatedObjects == null))
                {
                    _RelatedObjects = base.CreateObjectSet<RelatedObject>("RelatedObjects");
                }
                return _RelatedObjects;
            }
        }
        private ObjectSet<RelatedObject> _RelatedObjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailSettings> EmailSettings
        {
            get
            {
                if ((_EmailSettings == null))
                {
                    _EmailSettings = base.CreateObjectSet<EmailSettings>("EmailSettings");
                }
                return _EmailSettings;
            }
        }
        private ObjectSet<EmailSettings> _EmailSettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentSet> DocumentSets
        {
            get
            {
                if ((_DocumentSets == null))
                {
                    _DocumentSets = base.CreateObjectSet<DocumentSet>("DocumentSets");
                }
                return _DocumentSets;
            }
        }
        private ObjectSet<DocumentSet> _DocumentSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailTemplates> EmailTemplates
        {
            get
            {
                if ((_EmailTemplates == null))
                {
                    _EmailTemplates = base.CreateObjectSet<EmailTemplates>("EmailTemplates");
                }
                return _EmailTemplates;
            }
        }
        private ObjectSet<EmailTemplates> _EmailTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subject> Subjects
        {
            get
            {
                if ((_Subjects == null))
                {
                    _Subjects = base.CreateObjectSet<Subject>("Subjects");
                }
                return _Subjects;
            }
        }
        private ObjectSet<Subject> _Subjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRole> UserRoles
        {
            get
            {
                if ((_UserRoles == null))
                {
                    _UserRoles = base.CreateObjectSet<UserRole>("UserRoles");
                }
                return _UserRoles;
            }
        }
        private ObjectSet<UserRole> _UserRoles;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactTypes(ContactType contactType)
        {
            base.AddObject("ContactTypes", contactType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Areas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAreas(Area area)
        {
            base.AddObject("Areas", area);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyAreas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyAreas(CompanyArea companyArea)
        {
            base.AddObject("CompanyAreas", companyArea);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyCategories(CompanyCategory companyCategory)
        {
            base.AddObject("CompanyCategories", companyCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentTypes(DocumentType documentType)
        {
            base.AddObject("DocumentTypes", documentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentStatuses(DocumentStatus documentStatus)
        {
            base.AddObject("DocumentStatuses", documentStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocuments(Document document)
        {
            base.AddObject("Documents", document);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Organizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizations(Organization organization)
        {
            base.AddObject("Organizations", organization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RelatedObjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRelatedObjects(RelatedObject relatedObject)
        {
            base.AddObject("RelatedObjects", relatedObject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailSettings(EmailSettings emailSettings)
        {
            base.AddObject("EmailSettings", emailSettings);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentSets(DocumentSet documentSet)
        {
            base.AddObject("DocumentSets", documentSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailTemplates(EmailTemplates emailTemplates)
        {
            base.AddObject("EmailTemplates", emailTemplates);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubjects(Subject subject)
        {
            base.AddObject("Subjects", subject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRoles(UserRole userRole)
        {
            base.AddObject("UserRoles", userRole);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="Area")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Area : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Area object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        public static Area CreateArea(global::System.Guid id, global::System.String name, global::System.Guid organizationID)
        {
            Area area = new Area();
            area.ID = id;
            area.Name = name;
            area.OrganizationID = organizationID;
            return area;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "AreaCompanyArea", "CompanyArea")]
        public EntityCollection<CompanyArea> CompanyAreas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyArea>("SQuadro.AreaCompanyArea", "CompanyArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyArea>("SQuadro.AreaCompanyArea", "CompanyArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationArea", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationArea", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationArea", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationArea", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SQuadro.OrganizationArea", "Organization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        public static Category CreateCategory(global::System.Guid id, global::System.Guid organizationID)
        {
            Category category = new Category();
            category.ID = id;
            category.OrganizationID = organizationID;
            return category;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name = "\"\"";
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment = "\"\"";
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "CategoryCategoryCompany", "CategoryCompany")]
        public EntityCollection<CompanyCategory> CategoryCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyCategory>("SQuadro.CategoryCategoryCompany", "CategoryCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyCategory>("SQuadro.CategoryCategoryCompany", "CategoryCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationCategory", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationCategory", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationCategory", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationCategory", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SQuadro.OrganizationCategory", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "UserRoleCategory", "UserRole")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("SQuadro.UserRoleCategory", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("SQuadro.UserRoleCategory", "UserRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="countryID_Alpha2">Initial value of the CountryID_Alpha2 property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="createdByUserID">Initial value of the CreatedByUserID property.</param>
        public static Company CreateCompany(global::System.Guid id, global::System.String countryID_Alpha2, global::System.Guid organizationID, global::System.DateTimeOffset createdOn, global::System.Guid createdByUserID)
        {
            Company company = new Company();
            company.ID = id;
            company.CountryID_Alpha2 = countryID_Alpha2;
            company.OrganizationID = organizationID;
            company.CreatedOn = createdOn;
            company.CreatedByUserID = createdByUserID;
            return company;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name = "\"\"";
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false, "FullName");
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName = "\"\"";
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address = "\"\"";
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment = "\"\"";
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryID_Alpha2
        {
            get
            {
                return _CountryID_Alpha2;
            }
            set
            {
                OnCountryID_Alpha2Changing(value);
                ReportPropertyChanging("CountryID_Alpha2");
                _CountryID_Alpha2 = StructuralObject.SetValidValue(value, false, "CountryID_Alpha2");
                ReportPropertyChanged("CountryID_Alpha2");
                OnCountryID_Alpha2Changed();
            }
        }
        private global::System.String _CountryID_Alpha2;
        partial void OnCountryID_Alpha2Changing(global::System.String value);
        partial void OnCountryID_Alpha2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value, "CreatedOn");
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTimeOffset _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTimeOffset value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value, "UpdatedOn");
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CreatedByUserID
        {
            get
            {
                return _CreatedByUserID;
            }
            set
            {
                OnCreatedByUserIDChanging(value);
                ReportPropertyChanging("CreatedByUserID");
                _CreatedByUserID = StructuralObject.SetValidValue(value, "CreatedByUserID");
                ReportPropertyChanged("CreatedByUserID");
                OnCreatedByUserIDChanged();
            }
        }
        private global::System.Guid _CreatedByUserID;
        partial void OnCreatedByUserIDChanging(global::System.Guid value);
        partial void OnCreatedByUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UpdatedByUserID
        {
            get
            {
                return _UpdatedByUserID;
            }
            set
            {
                OnUpdatedByUserIDChanging(value);
                ReportPropertyChanging("UpdatedByUserID");
                _UpdatedByUserID = StructuralObject.SetValidValue(value, "UpdatedByUserID");
                ReportPropertyChanged("UpdatedByUserID");
                OnUpdatedByUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UpdatedByUserID;
        partial void OnUpdatedByUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnUpdatedByUserIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "CountryCompany", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("SQuadro.CountryCompany", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("SQuadro.CountryCompany", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("SQuadro.CountryCompany", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("SQuadro.CountryCompany", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "CompanyContact", "Contact")]
        public EntityCollection<Contact> Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("SQuadro.CompanyContact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("SQuadro.CompanyContact", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "CompanyCompanyArea", "CompanyArea")]
        public EntityCollection<CompanyArea> CompanyAreas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyArea>("SQuadro.CompanyCompanyArea", "CompanyArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyArea>("SQuadro.CompanyCompanyArea", "CompanyArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "CompanyCategoryCompany", "CategoryCompany")]
        public EntityCollection<CompanyCategory> CompanyCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyCategory>("SQuadro.CompanyCategoryCompany", "CategoryCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyCategory>("SQuadro.CompanyCategoryCompany", "CategoryCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationCompany", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationCompany", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationCompany", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationCompany", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SQuadro.OrganizationCompany", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "CreatedBy", "User")]
        public User UserCreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SQuadro.CreatedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SQuadro.CreatedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserCreatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SQuadro.CreatedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SQuadro.CreatedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "UpdatedBy", "User")]
        public User UserUpdatedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SQuadro.UpdatedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SQuadro.UpdatedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserUpdatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SQuadro.UpdatedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SQuadro.UpdatedBy", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="CompanyArea")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyArea : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyArea object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="areaID">Initial value of the AreaID property.</param>
        public static CompanyArea CreateCompanyArea(global::System.Guid id, global::System.Guid companyID, global::System.Guid areaID)
        {
            CompanyArea companyArea = new CompanyArea();
            companyArea.ID = id;
            companyArea.CompanyID = companyID;
            companyArea.AreaID = areaID;
            return companyArea;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value, "CompanyID");
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Guid _CompanyID;
        partial void OnCompanyIDChanging(global::System.Guid value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AreaID
        {
            get
            {
                return _AreaID;
            }
            set
            {
                OnAreaIDChanging(value);
                ReportPropertyChanging("AreaID");
                _AreaID = StructuralObject.SetValidValue(value, "AreaID");
                ReportPropertyChanged("AreaID");
                OnAreaIDChanged();
            }
        }
        private global::System.Guid _AreaID;
        partial void OnAreaIDChanging(global::System.Guid value);
        partial void OnAreaIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "CompanyCompanyArea", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SQuadro.CompanyCompanyArea", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SQuadro.CompanyCompanyArea", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SQuadro.CompanyCompanyArea", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("SQuadro.CompanyCompanyArea", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "AreaCompanyArea", "Area")]
        public Area Area
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("SQuadro.AreaCompanyArea", "Area").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("SQuadro.AreaCompanyArea", "Area").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Area> AreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("SQuadro.AreaCompanyArea", "Area");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Area>("SQuadro.AreaCompanyArea", "Area", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="CompanyCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyCategory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        public static CompanyCategory CreateCompanyCategory(global::System.Guid id, global::System.Guid companyID, global::System.Guid categoryID)
        {
            CompanyCategory companyCategory = new CompanyCategory();
            companyCategory.ID = id;
            companyCategory.CompanyID = companyID;
            companyCategory.CategoryID = categoryID;
            return companyCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value, "CompanyID");
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Guid _CompanyID;
        partial void OnCompanyIDChanging(global::System.Guid value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value, "CategoryID");
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Guid _CategoryID;
        partial void OnCategoryIDChanging(global::System.Guid value);
        partial void OnCategoryIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "CompanyCategoryCompany", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SQuadro.CompanyCategoryCompany", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SQuadro.CompanyCategoryCompany", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SQuadro.CompanyCategoryCompany", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("SQuadro.CompanyCategoryCompany", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "CategoryCategoryCompany", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SQuadro.CategoryCategoryCompany", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SQuadro.CategoryCategoryCompany", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SQuadro.CategoryCategoryCompany", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("SQuadro.CategoryCategoryCompany", "Category", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        /// <param name="isPrimary">Initial value of the IsPrimary property.</param>
        /// <param name="contactTypeID">Initial value of the ContactTypeID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        public static Contact CreateContact(global::System.Guid id, global::System.String data, global::System.Boolean isPrimary, global::System.Int32 contactTypeID, global::System.Guid companyID)
        {
            Contact contact = new Contact();
            contact.ID = id;
            contact.Data = data;
            contact.IsPrimary = isPrimary;
            contact.ContactTypeID = contactTypeID;
            contact.CompanyID = companyID;
            return contact;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false, "Data");
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimary
        {
            get
            {
                return _IsPrimary;
            }
            set
            {
                OnIsPrimaryChanging(value);
                ReportPropertyChanging("IsPrimary");
                _IsPrimary = StructuralObject.SetValidValue(value, "IsPrimary");
                ReportPropertyChanged("IsPrimary");
                OnIsPrimaryChanged();
            }
        }
        private global::System.Boolean _IsPrimary;
        partial void OnIsPrimaryChanging(global::System.Boolean value);
        partial void OnIsPrimaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment = "\"\"";
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserGroup
        {
            get
            {
                return _UserGroup;
            }
            set
            {
                OnUserGroupChanging(value);
                ReportPropertyChanging("UserGroup");
                _UserGroup = StructuralObject.SetValidValue(value, true, "UserGroup");
                ReportPropertyChanged("UserGroup");
                OnUserGroupChanged();
            }
        }
        private global::System.String _UserGroup;
        partial void OnUserGroupChanging(global::System.String value);
        partial void OnUserGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactTypeID
        {
            get
            {
                return _ContactTypeID;
            }
            set
            {
                OnContactTypeIDChanging(value);
                ReportPropertyChanging("ContactTypeID");
                _ContactTypeID = StructuralObject.SetValidValue(value, "ContactTypeID");
                ReportPropertyChanged("ContactTypeID");
                OnContactTypeIDChanged();
            }
        }
        private global::System.Int32 _ContactTypeID;
        partial void OnContactTypeIDChanging(global::System.Int32 value);
        partial void OnContactTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value, "CompanyID");
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Guid _CompanyID;
        partial void OnCompanyIDChanging(global::System.Guid value);
        partial void OnCompanyIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "ContactContactType", "ContactType")]
        public ContactType ContactType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("SQuadro.ContactContactType", "ContactType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("SQuadro.ContactContactType", "ContactType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContactType> ContactTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("SQuadro.ContactContactType", "ContactType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContactType>("SQuadro.ContactContactType", "ContactType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "CompanyContact", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SQuadro.CompanyContact", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SQuadro.CompanyContact", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SQuadro.CompanyContact", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("SQuadro.CompanyContact", "Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="ContactType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        public static ContactType CreateContactType(global::System.Int32 id, global::System.String name, global::System.Guid organizationID)
        {
            ContactType contactType = new ContactType();
            contactType.ID = id;
            contactType.Name = name;
            contactType.OrganizationID = organizationID;
            return contactType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayPattern
        {
            get
            {
                return _DisplayPattern;
            }
            set
            {
                OnDisplayPatternChanging(value);
                ReportPropertyChanging("DisplayPattern");
                _DisplayPattern = StructuralObject.SetValidValue(value, true, "DisplayPattern");
                ReportPropertyChanged("DisplayPattern");
                OnDisplayPatternChanged();
            }
        }
        private global::System.String _DisplayPattern;
        partial void OnDisplayPatternChanging(global::System.String value);
        partial void OnDisplayPatternChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SystemType
        {
            get
            {
                return _SystemType;
            }
            set
            {
                OnSystemTypeChanging(value);
                ReportPropertyChanging("SystemType");
                _SystemType = StructuralObject.SetValidValue(value, "SystemType");
                ReportPropertyChanged("SystemType");
                OnSystemTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _SystemType;
        partial void OnSystemTypeChanging(Nullable<global::System.Int32> value);
        partial void OnSystemTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "ContactContactType", "Contact")]
        public EntityCollection<Contact> Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("SQuadro.ContactContactType", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("SQuadro.ContactContactType", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationContactType", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationContactType", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationContactType", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationContactType", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SQuadro.OrganizationContactType", "Organization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="iD_Alpha2">Initial value of the ID_Alpha2 property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Country CreateCountry(global::System.String iD_Alpha2, global::System.String name)
        {
            Country country = new Country();
            country.ID_Alpha2 = iD_Alpha2;
            country.Name = name;
            return country;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID_Alpha2
        {
            get
            {
                return _ID_Alpha2;
            }
            set
            {
                if (_ID_Alpha2 != value)
                {
                    OnID_Alpha2Changing(value);
                    ReportPropertyChanging("ID_Alpha2");
                    _ID_Alpha2 = StructuralObject.SetValidValue(value, false, "ID_Alpha2");
                    ReportPropertyChanged("ID_Alpha2");
                    OnID_Alpha2Changed();
                }
            }
        }
        private global::System.String _ID_Alpha2;
        partial void OnID_Alpha2Changing(global::System.String value);
        partial void OnID_Alpha2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "CountryCompany", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("SQuadro.CountryCompany", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("SQuadro.CountryCompany", "Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="Document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Document object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="createdByUserID">Initial value of the CreatedByUserID property.</param>
        public static Document CreateDocument(global::System.Guid id, global::System.String name, global::System.String fileName, global::System.DateTime date, global::System.Guid organizationID, global::System.DateTimeOffset createdOn, global::System.Guid createdByUserID)
        {
            Document document = new Document();
            document.ID = id;
            document.Name = name;
            document.FileName = fileName;
            document.Date = date;
            document.OrganizationID = organizationID;
            document.CreatedOn = createdOn;
            document.CreatedByUserID = createdByUserID;
            return document;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true, "Number");
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false, "FileName");
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value, "ExpirationDate");
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentTypeID
        {
            get
            {
                return _DocumentTypeID;
            }
            set
            {
                OnDocumentTypeIDChanging(value);
                ReportPropertyChanging("DocumentTypeID");
                _DocumentTypeID = StructuralObject.SetValidValue(value, "DocumentTypeID");
                ReportPropertyChanged("DocumentTypeID");
                OnDocumentTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentTypeID;
        partial void OnDocumentTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentStatusID
        {
            get
            {
                return _DocumentStatusID;
            }
            set
            {
                OnDocumentStatusIDChanging(value);
                ReportPropertyChanging("DocumentStatusID");
                _DocumentStatusID = StructuralObject.SetValidValue(value, "DocumentStatusID");
                ReportPropertyChanged("DocumentStatusID");
                OnDocumentStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentStatusID;
        partial void OnDocumentStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tags
        {
            get
            {
                return _Tags;
            }
            set
            {
                OnTagsChanging(value);
                ReportPropertyChanging("Tags");
                _Tags = StructuralObject.SetValidValue(value, true, "Tags");
                ReportPropertyChanged("Tags");
                OnTagsChanged();
            }
        }
        private global::System.String _Tags;
        partial void OnTagsChanging(global::System.String value);
        partial void OnTagsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RelatedObjectID
        {
            get
            {
                return _RelatedObjectID;
            }
            set
            {
                OnRelatedObjectIDChanging(value);
                ReportPropertyChanging("RelatedObjectID");
                _RelatedObjectID = StructuralObject.SetValidValue(value, "RelatedObjectID");
                ReportPropertyChanged("RelatedObjectID");
                OnRelatedObjectIDChanged();
            }
        }
        private Nullable<global::System.Guid> _RelatedObjectID;
        partial void OnRelatedObjectIDChanging(Nullable<global::System.Guid> value);
        partial void OnRelatedObjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value, "CreatedOn");
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTimeOffset _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTimeOffset value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value, "UpdatedOn");
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CreatedByUserID
        {
            get
            {
                return _CreatedByUserID;
            }
            set
            {
                OnCreatedByUserIDChanging(value);
                ReportPropertyChanging("CreatedByUserID");
                _CreatedByUserID = StructuralObject.SetValidValue(value, "CreatedByUserID");
                ReportPropertyChanged("CreatedByUserID");
                OnCreatedByUserIDChanged();
            }
        }
        private global::System.Guid _CreatedByUserID;
        partial void OnCreatedByUserIDChanging(global::System.Guid value);
        partial void OnCreatedByUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UpdatedByUserID
        {
            get
            {
                return _UpdatedByUserID;
            }
            set
            {
                OnUpdatedByUserIDChanging(value);
                ReportPropertyChanging("UpdatedByUserID");
                _UpdatedByUserID = StructuralObject.SetValidValue(value, "UpdatedByUserID");
                ReportPropertyChanged("UpdatedByUserID");
                OnUpdatedByUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UpdatedByUserID;
        partial void OnUpdatedByUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnUpdatedByUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] File
        {
            get
            {
                return StructuralObject.GetValidValue(_File);
            }
            set
            {
                OnFileChanging(value);
                ReportPropertyChanging("File");
                _File = StructuralObject.SetValidValue(value, true, "File");
                ReportPropertyChanged("File");
                OnFileChanged();
            }
        }
        private global::System.Byte[] _File;
        partial void OnFileChanging(global::System.Byte[] value);
        partial void OnFileChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "DocumentTypeDocument", "DocumentType")]
        public DocumentType DocumentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("SQuadro.DocumentTypeDocument", "DocumentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("SQuadro.DocumentTypeDocument", "DocumentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentType> DocumentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("SQuadro.DocumentTypeDocument", "DocumentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentType>("SQuadro.DocumentTypeDocument", "DocumentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "DocumentStatusDocument", "DocumentStatus")]
        public DocumentStatus DocumentStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentStatus>("SQuadro.DocumentStatusDocument", "DocumentStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentStatus>("SQuadro.DocumentStatusDocument", "DocumentStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentStatus> DocumentStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentStatus>("SQuadro.DocumentStatusDocument", "DocumentStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentStatus>("SQuadro.DocumentStatusDocument", "DocumentStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "RelatedObjectDocument", "RelatedObject")]
        public RelatedObject RelatedObject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelatedObject>("SQuadro.RelatedObjectDocument", "RelatedObject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelatedObject>("SQuadro.RelatedObjectDocument", "RelatedObject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RelatedObject> RelatedObjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelatedObject>("SQuadro.RelatedObjectDocument", "RelatedObject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RelatedObject>("SQuadro.RelatedObjectDocument", "RelatedObject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationDocument", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationDocument", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationDocument", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationDocument", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SQuadro.OrganizationDocument", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "DocumentSetDocument", "DocumentSet")]
        public EntityCollection<DocumentSet> DocumentSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DocumentSet>("SQuadro.DocumentSetDocument", "DocumentSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DocumentSet>("SQuadro.DocumentSetDocument", "DocumentSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "DocumentCreatedByUser", "User")]
        public User UserCreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SQuadro.DocumentCreatedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SQuadro.DocumentCreatedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserCreatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SQuadro.DocumentCreatedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SQuadro.DocumentCreatedByUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "DocumentUpdatedByUser", "User")]
        public User UserUpdatedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SQuadro.DocumentUpdatedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SQuadro.DocumentUpdatedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserUpdatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SQuadro.DocumentUpdatedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SQuadro.DocumentUpdatedByUser", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="DocumentSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentSet object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        public static DocumentSet CreateDocumentSet(global::System.Guid id, global::System.String name, global::System.Guid organizationID)
        {
            DocumentSet documentSet = new DocumentSet();
            documentSet.ID = id;
            documentSet.Name = name;
            documentSet.OrganizationID = organizationID;
            return documentSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationDocumentSet", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationDocumentSet", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationDocumentSet", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationDocumentSet", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SQuadro.OrganizationDocumentSet", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "DocumentSetDocument", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("SQuadro.DocumentSetDocument", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("SQuadro.DocumentSetDocument", "Document", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="DocumentStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentStatus object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        public static DocumentStatus CreateDocumentStatus(global::System.Int32 id, global::System.String name, global::System.Guid organizationID)
        {
            DocumentStatus documentStatus = new DocumentStatus();
            documentStatus.ID = id;
            documentStatus.Name = name;
            documentStatus.OrganizationID = organizationID;
            return documentStatus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "DocumentStatusDocument", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("SQuadro.DocumentStatusDocument", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("SQuadro.DocumentStatusDocument", "Document", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationDocumentStatus", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationDocumentStatus", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationDocumentStatus", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationDocumentStatus", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SQuadro.OrganizationDocumentStatus", "Organization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="DocumentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        public static DocumentType CreateDocumentType(global::System.Int32 id, global::System.String name, global::System.Guid organizationID)
        {
            DocumentType documentType = new DocumentType();
            documentType.ID = id;
            documentType.Name = name;
            documentType.OrganizationID = organizationID;
            return documentType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "DocumentTypeDocument", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("SQuadro.DocumentTypeDocument", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("SQuadro.DocumentTypeDocument", "Document", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationDocumentType", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationDocumentType", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationDocumentType", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationDocumentType", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SQuadro.OrganizationDocumentType", "Organization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="EmailSettings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailSettings : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailSettings object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="isDefault">Initial value of the IsDefault property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="smtpPort">Initial value of the SmtpPort property.</param>
        /// <param name="smtpUser">Initial value of the SmtpUser property.</param>
        /// <param name="smtpPassword">Initial value of the SmtpPassword property.</param>
        /// <param name="enableSsl">Initial value of the EnableSsl property.</param>
        public static EmailSettings CreateEmailSettings(global::System.Guid id, global::System.String name, global::System.Guid organizationID, global::System.Boolean isDefault, global::System.String email, global::System.Int32 smtpPort, global::System.String smtpUser, global::System.String smtpPassword, global::System.Boolean enableSsl)
        {
            EmailSettings emailSettings = new EmailSettings();
            emailSettings.ID = id;
            emailSettings.Name = name;
            emailSettings.OrganizationID = organizationID;
            emailSettings.IsDefault = isDefault;
            emailSettings.Email = email;
            emailSettings.SmtpPort = smtpPort;
            emailSettings.SmtpUser = smtpUser;
            emailSettings.SmtpPassword = smtpPassword;
            emailSettings.EnableSsl = enableSsl;
            return emailSettings;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value, "IsDefault");
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private global::System.Boolean _IsDefault;
        partial void OnIsDefaultChanging(global::System.Boolean value);
        partial void OnIsDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SmtpServer
        {
            get
            {
                return _SmtpServer;
            }
            set
            {
                OnSmtpServerChanging(value);
                ReportPropertyChanging("SmtpServer");
                _SmtpServer = StructuralObject.SetValidValue(value, false, "SmtpServer");
                ReportPropertyChanged("SmtpServer");
                OnSmtpServerChanged();
            }
        }
        private global::System.String _SmtpServer = "";
        partial void OnSmtpServerChanging(global::System.String value);
        partial void OnSmtpServerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SmtpPort
        {
            get
            {
                return _SmtpPort;
            }
            set
            {
                OnSmtpPortChanging(value);
                ReportPropertyChanging("SmtpPort");
                _SmtpPort = StructuralObject.SetValidValue(value, "SmtpPort");
                ReportPropertyChanged("SmtpPort");
                OnSmtpPortChanged();
            }
        }
        private global::System.Int32 _SmtpPort;
        partial void OnSmtpPortChanging(global::System.Int32 value);
        partial void OnSmtpPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SmtpUser
        {
            get
            {
                return _SmtpUser;
            }
            set
            {
                OnSmtpUserChanging(value);
                ReportPropertyChanging("SmtpUser");
                _SmtpUser = StructuralObject.SetValidValue(value, false, "SmtpUser");
                ReportPropertyChanged("SmtpUser");
                OnSmtpUserChanged();
            }
        }
        private global::System.String _SmtpUser;
        partial void OnSmtpUserChanging(global::System.String value);
        partial void OnSmtpUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SmtpPassword
        {
            get
            {
                return _SmtpPassword;
            }
            set
            {
                OnSmtpPasswordChanging(value);
                ReportPropertyChanging("SmtpPassword");
                _SmtpPassword = StructuralObject.SetValidValue(value, false, "SmtpPassword");
                ReportPropertyChanged("SmtpPassword");
                OnSmtpPasswordChanged();
            }
        }
        private global::System.String _SmtpPassword;
        partial void OnSmtpPasswordChanging(global::System.String value);
        partial void OnSmtpPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean EnableSsl
        {
            get
            {
                return _EnableSsl;
            }
            set
            {
                OnEnableSslChanging(value);
                ReportPropertyChanging("EnableSsl");
                _EnableSsl = StructuralObject.SetValidValue(value, "EnableSsl");
                ReportPropertyChanged("EnableSsl");
                OnEnableSslChanged();
            }
        }
        private global::System.Boolean _EnableSsl;
        partial void OnEnableSslChanging(global::System.Boolean value);
        partial void OnEnableSslChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationEmailSenderTemplate", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationEmailSenderTemplate", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationEmailSenderTemplate", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationEmailSenderTemplate", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SQuadro.OrganizationEmailSenderTemplate", "Organization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="EmailTemplates")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailTemplates : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailTemplates object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static EmailTemplates CreateEmailTemplates(global::System.Guid id, global::System.Guid organizationID, global::System.Int32 type)
        {
            EmailTemplates emailTemplates = new EmailTemplates();
            emailTemplates.ID = id;
            emailTemplates.OrganizationID = organizationID;
            emailTemplates.Type = type;
            return emailTemplates;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, true, "Body");
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Salutation
        {
            get
            {
                return _Salutation;
            }
            set
            {
                OnSalutationChanging(value);
                ReportPropertyChanging("Salutation");
                _Salutation = StructuralObject.SetValidValue(value, true, "Salutation");
                ReportPropertyChanged("Salutation");
                OnSalutationChanged();
            }
        }
        private global::System.String _Salutation;
        partial void OnSalutationChanging(global::System.String value);
        partial void OnSalutationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Signature
        {
            get
            {
                return _Signature;
            }
            set
            {
                OnSignatureChanging(value);
                ReportPropertyChanging("Signature");
                _Signature = StructuralObject.SetValidValue(value, true, "Signature");
                ReportPropertyChanged("Signature");
                OnSignatureChanged();
            }
        }
        private global::System.String _Signature;
        partial void OnSignatureChanging(global::System.String value);
        partial void OnSignatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true, "Subject");
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationEmailTemplates", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationEmailTemplates", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationEmailTemplates", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationEmailTemplates", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SQuadro.OrganizationEmailTemplates", "Organization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="Organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Organization object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="timezone">Initial value of the Timezone property.</param>
        public static Organization CreateOrganization(global::System.Guid id, global::System.String name, global::System.String timezone)
        {
            Organization organization = new Organization();
            organization.ID = id;
            organization.Name = name;
            organization.Timezone = timezone;
            return organization;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Timezone
        {
            get
            {
                return _Timezone;
            }
            set
            {
                OnTimezoneChanging(value);
                ReportPropertyChanging("Timezone");
                _Timezone = StructuralObject.SetValidValue(value, false, "Timezone");
                ReportPropertyChanged("Timezone");
                OnTimezoneChanged();
            }
        }
        private global::System.String _Timezone;
        partial void OnTimezoneChanging(global::System.String value);
        partial void OnTimezoneChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "UserOrganization", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SQuadro.UserOrganization", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SQuadro.UserOrganization", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationArea", "Area")]
        public EntityCollection<Area> Areas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Area>("SQuadro.OrganizationArea", "Area");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Area>("SQuadro.OrganizationArea", "Area", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationCompany", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("SQuadro.OrganizationCompany", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("SQuadro.OrganizationCompany", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationContactType", "ContactType")]
        public EntityCollection<ContactType> ContactTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactType>("SQuadro.OrganizationContactType", "ContactType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactType>("SQuadro.OrganizationContactType", "ContactType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationCategory", "Category")]
        public EntityCollection<Category> Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("SQuadro.OrganizationCategory", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("SQuadro.OrganizationCategory", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationTag", "Tag")]
        public EntityCollection<Tag> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("SQuadro.OrganizationTag", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("SQuadro.OrganizationTag", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationDocumentStatus", "DocumentStatus")]
        public EntityCollection<DocumentStatus> DocumentStatuses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DocumentStatus>("SQuadro.OrganizationDocumentStatus", "DocumentStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DocumentStatus>("SQuadro.OrganizationDocumentStatus", "DocumentStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationDocumentType", "DocumentType")]
        public EntityCollection<DocumentType> DocumentTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DocumentType>("SQuadro.OrganizationDocumentType", "DocumentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DocumentType>("SQuadro.OrganizationDocumentType", "DocumentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationRelatedObject", "RelatedObject")]
        public EntityCollection<RelatedObject> RelatedObjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RelatedObject>("SQuadro.OrganizationRelatedObject", "RelatedObject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RelatedObject>("SQuadro.OrganizationRelatedObject", "RelatedObject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationDocument", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("SQuadro.OrganizationDocument", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("SQuadro.OrganizationDocument", "Document", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationEmailSenderTemplate", "EmailSenderTemplate")]
        public EntityCollection<EmailSettings> EmailSenderTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmailSettings>("SQuadro.OrganizationEmailSenderTemplate", "EmailSenderTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmailSettings>("SQuadro.OrganizationEmailSenderTemplate", "EmailSenderTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationDocumentSet", "DocumentSet")]
        public EntityCollection<DocumentSet> DocumentSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DocumentSet>("SQuadro.OrganizationDocumentSet", "DocumentSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DocumentSet>("SQuadro.OrganizationDocumentSet", "DocumentSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationEmailTemplates", "EmailTemplates")]
        public EntityCollection<EmailTemplates> EmailTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmailTemplates>("SQuadro.OrganizationEmailTemplates", "EmailTemplates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmailTemplates>("SQuadro.OrganizationEmailTemplates", "EmailTemplates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationSubject", "Subject")]
        public EntityCollection<Subject> Subjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subject>("SQuadro.OrganizationSubject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subject>("SQuadro.OrganizationSubject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationUserRole", "UserRole")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("SQuadro.OrganizationUserRole", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("SQuadro.OrganizationUserRole", "UserRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="RelatedObject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Vessel))]
    public abstract partial class RelatedObject : EntityObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "RelatedObjectDocument", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("SQuadro.RelatedObjectDocument", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("SQuadro.RelatedObjectDocument", "Document", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationRelatedObject", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationRelatedObject", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationRelatedObject", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationRelatedObject", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SQuadro.OrganizationRelatedObject", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "UserRoleRelatedObject", "UserRole")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("SQuadro.UserRoleRelatedObject", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("SQuadro.UserRoleRelatedObject", "UserRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="Subject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subject object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        public static Subject CreateSubject(global::System.Int64 id, global::System.String text, global::System.Guid organizationID)
        {
            Subject subject = new Subject();
            subject.ID = id;
            subject.Text = text;
            subject.OrganizationID = organizationID;
            return subject;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false, "Text");
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationSubject", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationSubject", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationSubject", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationSubject", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SQuadro.OrganizationSubject", "Organization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        public static Tag CreateTag(global::System.Int64 id, global::System.String name, global::System.Guid organizationID)
        {
            Tag tag = new Tag();
            tag.ID = id;
            tag.Name = name;
            tag.OrganizationID = organizationID;
            return tag;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationTag", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationTag", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationTag", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationTag", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SQuadro.OrganizationTag", "Organization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="role">Initial value of the Role property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="forceChangePassword">Initial value of the ForceChangePassword property.</param>
        public static User CreateUser(global::System.Guid id, global::System.String name, global::System.String email, global::System.Int32 role, global::System.Guid organizationID, global::System.Boolean forceChangePassword)
        {
            User user = new User();
            user.ID = id;
            user.Name = name;
            user.Email = email;
            user.Role = role;
            user.OrganizationID = organizationID;
            user.ForceChangePassword = forceChangePassword;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, "Role");
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.Int32 _Role;
        partial void OnRoleChanging(global::System.Int32 value);
        partial void OnRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ForceChangePassword
        {
            get
            {
                return _ForceChangePassword;
            }
            set
            {
                OnForceChangePasswordChanging(value);
                ReportPropertyChanging("ForceChangePassword");
                _ForceChangePassword = StructuralObject.SetValidValue(value, "ForceChangePassword");
                ReportPropertyChanged("ForceChangePassword");
                OnForceChangePasswordChanged();
            }
        }
        private global::System.Boolean _ForceChangePassword;
        partial void OnForceChangePasswordChanging(global::System.Boolean value);
        partial void OnForceChangePasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserRoleID
        {
            get
            {
                return _UserRoleID;
            }
            set
            {
                OnUserRoleIDChanging(value);
                ReportPropertyChanging("UserRoleID");
                _UserRoleID = StructuralObject.SetValidValue(value, "UserRoleID");
                ReportPropertyChanged("UserRoleID");
                OnUserRoleIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UserRoleID;
        partial void OnUserRoleIDChanging(Nullable<global::System.Guid> value);
        partial void OnUserRoleIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "UserOrganization", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.UserOrganization", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.UserOrganization", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.UserOrganization", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SQuadro.UserOrganization", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "CreatedBy", "Company")]
        public EntityCollection<Company> CreatedCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("SQuadro.CreatedBy", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("SQuadro.CreatedBy", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "UpdatedBy", "Company")]
        public EntityCollection<Company> UpdatedCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("SQuadro.UpdatedBy", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("SQuadro.UpdatedBy", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "DocumentCreatedByUser", "Document")]
        public EntityCollection<Document> CreatedDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("SQuadro.DocumentCreatedByUser", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("SQuadro.DocumentCreatedByUser", "Document", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "DocumentUpdatedByUser", "Document")]
        public EntityCollection<Document> UpdatedDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("SQuadro.DocumentUpdatedByUser", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("SQuadro.DocumentUpdatedByUser", "Document", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "UserRoleUser", "UserRole")]
        public UserRole UserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("SQuadro.UserRoleUser", "UserRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("SQuadro.UserRoleUser", "UserRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserRole> UserRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("SQuadro.UserRoleUser", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserRole>("SQuadro.UserRoleUser", "UserRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRole object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="isReadonly">Initial value of the IsReadonly property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static UserRole CreateUserRole(global::System.Guid id, global::System.Guid organizationID, global::System.Boolean isReadonly, global::System.String name)
        {
            UserRole userRole = new UserRole();
            userRole.ID = id;
            userRole.OrganizationID = organizationID;
            userRole.IsReadonly = isReadonly;
            userRole.Name = name;
            return userRole;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReadonly
        {
            get
            {
                return _IsReadonly;
            }
            set
            {
                OnIsReadonlyChanging(value);
                ReportPropertyChanging("IsReadonly");
                _IsReadonly = StructuralObject.SetValidValue(value, "IsReadonly");
                ReportPropertyChanged("IsReadonly");
                OnIsReadonlyChanged();
            }
        }
        private global::System.Boolean _IsReadonly;
        partial void OnIsReadonlyChanging(global::System.Boolean value);
        partial void OnIsReadonlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "OrganizationUserRole", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationUserRole", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationUserRole", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SQuadro.OrganizationUserRole", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SQuadro.OrganizationUserRole", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "UserRoleUser", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SQuadro.UserRoleUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SQuadro.UserRoleUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "UserRoleCategory", "Category")]
        public EntityCollection<Category> Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("SQuadro.UserRoleCategory", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("SQuadro.UserRoleCategory", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQuadro", "UserRoleRelatedObject", "RelatedObject")]
        public EntityCollection<RelatedObject> RelatedObjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RelatedObject>("SQuadro.UserRoleRelatedObject", "RelatedObject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RelatedObject>("SQuadro.UserRoleRelatedObject", "RelatedObject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SQuadro", Name="Vessel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vessel : RelatedObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vessel object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        public static Vessel CreateVessel(global::System.Guid id, global::System.String name, global::System.Guid organizationID)
        {
            Vessel vessel = new Vessel();
            vessel.ID = id;
            vessel.Name = name;
            vessel.OrganizationID = organizationID;
            return vessel;
        }

        #endregion

    }

    #endregion

}
